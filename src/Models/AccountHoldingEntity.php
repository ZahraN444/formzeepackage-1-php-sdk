<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

/**
 * Information about the financial institution servicing the account.
 */
class AccountHoldingEntity implements \JsonSerializable
{
    /**
     * @var string[]|null
     */
    private $bankAddress;

    /**
     * @var string
     */
    private $bankId;

    /**
     * @var string
     */
    private $bankIdCode;

    /**
     * @var AccountWithBankId[]|null
     */
    private $bankIds;

    /**
     * @var string|null
     */
    private $bankName;

    /**
     * @var string|null
     */
    private $bankPartyId;

    /**
     * @param string $bankId
     * @param string $bankIdCode
     */
    public function __construct(string $bankId, string $bankIdCode)
    {
        $this->bankId = $bankId;
        $this->bankIdCode = $bankIdCode;
    }

    /**
     * Returns Bank Address.
     * Financial institution address
     *
     * @return string[]|null
     */
    public function getBankAddress(): ?array
    {
        return $this->bankAddress;
    }

    /**
     * Sets Bank Address.
     * Financial institution address
     *
     * @maps bank_address
     *
     * @param string[]|null $bankAddress
     */
    public function setBankAddress(?array $bankAddress): void
    {
        $this->bankAddress = $bankAddress;
    }

    /**
     * Returns Bank Id.
     */
    public function getBankId(): string
    {
        return $this->bankId;
    }

    /**
     * Sets Bank Id.
     *
     * @required
     * @maps bank_id
     */
    public function setBankId(string $bankId): void
    {
        $this->bankId = $bankId;
    }

    /**
     * Returns Bank Id Code.
     */
    public function getBankIdCode(): string
    {
        return $this->bankIdCode;
    }

    /**
     * Sets Bank Id Code.
     *
     * @required
     * @maps bank_id_code
     * @factory \Form3PublicAPILib\Models\BankIdCodeEnum::checkValue
     */
    public function setBankIdCode(string $bankIdCode): void
    {
        $this->bankIdCode = $bankIdCode;
    }

    /**
     * Returns Bank Ids.
     * Array for additional ID(s) for agent
     *
     * @return AccountWithBankId[]|null
     */
    public function getBankIds(): ?array
    {
        return $this->bankIds;
    }

    /**
     * Sets Bank Ids.
     * Array for additional ID(s) for agent
     *
     * @maps bank_ids
     *
     * @param AccountWithBankId[]|null $bankIds
     */
    public function setBankIds(?array $bankIds): void
    {
        $this->bankIds = $bankIds;
    }

    /**
     * Returns Bank Name.
     * Financial institution name
     */
    public function getBankName(): ?string
    {
        return $this->bankName;
    }

    /**
     * Sets Bank Name.
     * Financial institution name
     *
     * @maps bank_name
     */
    public function setBankName(?string $bankName): void
    {
        $this->bankName = $bankName;
    }

    /**
     * Returns Bank Party Id.
     * Identifier of the financial institution which services the account
     */
    public function getBankPartyId(): ?string
    {
        return $this->bankPartyId;
    }

    /**
     * Sets Bank Party Id.
     * Identifier of the financial institution which services the account
     *
     * @maps bank_party_id
     */
    public function setBankPartyId(?string $bankPartyId): void
    {
        $this->bankPartyId = $bankPartyId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->bankAddress)) {
            $json['bank_address']  = $this->bankAddress;
        }
        $json['bank_id']           = $this->bankId;
        $json['bank_id_code']      = BankIdCodeEnum::checkValue($this->bankIdCode);
        if (isset($this->bankIds)) {
            $json['bank_ids']      = $this->bankIds;
        }
        if (isset($this->bankName)) {
            $json['bank_name']     = $this->bankName;
        }
        if (isset($this->bankPartyId)) {
            $json['bank_party_id'] = $this->bankPartyId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
