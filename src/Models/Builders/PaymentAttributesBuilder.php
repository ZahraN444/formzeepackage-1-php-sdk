<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use Form3PublicAPILib\Models\BeneficiaryParty1;
use Form3PublicAPILib\Models\ChargesInformation;
use Form3PublicAPILib\Models\DebtorParty;
use Form3PublicAPILib\Models\Fx;
use Form3PublicAPILib\Models\IntermediaryBankAccountHoldingEntity;
use Form3PublicAPILib\Models\PaymentAttributes;
use Form3PublicAPILib\Models\ReceiversCorrespondentAccountHoldingEntity;
use Form3PublicAPILib\Models\ReimbursementAccountHoldingEntity;
use Form3PublicAPILib\Models\SendersCorrespondentAccountHoldingEntity;
use Form3PublicAPILib\Models\Settlement;
use Form3PublicAPILib\Models\StructuredReference;
use Form3PublicAPILib\Models\Swift;
use Form3PublicAPILib\Models\UltimateEntity;

/**
 * Builder for model PaymentAttributes
 *
 * @see PaymentAttributes
 */
class PaymentAttributesBuilder
{
    /**
     * @var PaymentAttributes
     */
    private $instance;

    private function __construct(PaymentAttributes $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new payment attributes Builder object.
     */
    public static function init(): self
    {
        return new self(new PaymentAttributes());
    }

    /**
     * Sets agents field.
     */
    public function agents(?array $value): self
    {
        $this->instance->setAgents($value);
        return $this;
    }

    /**
     * Sets amount field.
     */
    public function amount(?string $value): self
    {
        $this->instance->setAmount($value);
        return $this;
    }

    /**
     * Sets batch booking indicator field.
     */
    public function batchBookingIndicator(?string $value): self
    {
        $this->instance->setBatchBookingIndicator($value);
        return $this;
    }

    /**
     * Sets batch id field.
     */
    public function batchId(?string $value): self
    {
        $this->instance->setBatchId($value);
        return $this;
    }

    /**
     * Sets batch type field.
     */
    public function batchType(?string $value): self
    {
        $this->instance->setBatchType($value);
        return $this;
    }

    /**
     * Sets beneficiary party field.
     */
    public function beneficiaryParty(?BeneficiaryParty1 $value): self
    {
        $this->instance->setBeneficiaryParty($value);
        return $this;
    }

    /**
     * Sets category purpose field.
     */
    public function categoryPurpose(?string $value): self
    {
        $this->instance->setCategoryPurpose($value);
        return $this;
    }

    /**
     * Sets category purpose coded field.
     */
    public function categoryPurposeCoded(?string $value): self
    {
        $this->instance->setCategoryPurposeCoded($value);
        return $this;
    }

    /**
     * Sets charges information field.
     */
    public function chargesInformation(?ChargesInformation $value): self
    {
        $this->instance->setChargesInformation($value);
        return $this;
    }

    /**
     * Sets clearing id field.
     */
    public function clearingId(?string $value): self
    {
        $this->instance->setClearingId($value);
        return $this;
    }

    /**
     * Sets currency field.
     */
    public function currency(?string $value): self
    {
        $this->instance->setCurrency($value);
        return $this;
    }

    /**
     * Sets debtor party field.
     */
    public function debtorParty(?DebtorParty $value): self
    {
        $this->instance->setDebtorParty($value);
        return $this;
    }

    /**
     * Sets end to end reference field.
     */
    public function endToEndReference(?string $value): self
    {
        $this->instance->setEndToEndReference($value);
        return $this;
    }

    /**
     * Sets file number field.
     */
    public function fileNumber(?string $value): self
    {
        $this->instance->setFileNumber($value);
        return $this;
    }

    /**
     * Sets fx field.
     */
    public function fx(?Fx $value): self
    {
        $this->instance->setFx($value);
        return $this;
    }

    /**
     * Sets instruction id field.
     */
    public function instructionId(?string $value): self
    {
        $this->instance->setInstructionId($value);
        return $this;
    }

    /**
     * Sets intermediary bank field.
     */
    public function intermediaryBank(?IntermediaryBankAccountHoldingEntity $value): self
    {
        $this->instance->setIntermediaryBank($value);
        return $this;
    }

    /**
     * Sets numeric reference field.
     */
    public function numericReference(?string $value): self
    {
        $this->instance->setNumericReference($value);
        return $this;
    }

    /**
     * Sets payment acceptance datetime field.
     */
    public function paymentAcceptanceDatetime(?\DateTime $value): self
    {
        $this->instance->setPaymentAcceptanceDatetime($value);
        return $this;
    }

    /**
     * Sets payment purpose field.
     */
    public function paymentPurpose(?string $value): self
    {
        $this->instance->setPaymentPurpose($value);
        return $this;
    }

    /**
     * Sets payment purpose coded field.
     */
    public function paymentPurposeCoded(?string $value): self
    {
        $this->instance->setPaymentPurposeCoded($value);
        return $this;
    }

    /**
     * Sets payment scheme field.
     */
    public function paymentScheme(?string $value): self
    {
        $this->instance->setPaymentScheme($value);
        return $this;
    }

    /**
     * Sets payment type field.
     */
    public function paymentType(?string $value): self
    {
        $this->instance->setPaymentType($value);
        return $this;
    }

    /**
     * Sets processing date field.
     */
    public function processingDate(?\DateTime $value): self
    {
        $this->instance->setProcessingDate($value);
        return $this;
    }

    /**
     * Sets receivers correspondent field.
     */
    public function receiversCorrespondent(?ReceiversCorrespondentAccountHoldingEntity $value): self
    {
        $this->instance->setReceiversCorrespondent($value);
        return $this;
    }

    /**
     * Sets reference field.
     */
    public function reference(?string $value): self
    {
        $this->instance->setReference($value);
        return $this;
    }

    /**
     * Sets references field.
     */
    public function references(?array $value): self
    {
        $this->instance->setReferences($value);
        return $this;
    }

    /**
     * Sets regulatory reporting field.
     */
    public function regulatoryReporting(?string $value): self
    {
        $this->instance->setRegulatoryReporting($value);
        return $this;
    }

    /**
     * Sets reimbursement field.
     */
    public function reimbursement(?ReimbursementAccountHoldingEntity $value): self
    {
        $this->instance->setReimbursement($value);
        return $this;
    }

    /**
     * Sets remittance information field.
     */
    public function remittanceInformation(?string $value): self
    {
        $this->instance->setRemittanceInformation($value);
        return $this;
    }

    /**
     * Sets scheme payment sub type field.
     */
    public function schemePaymentSubType(?string $value): self
    {
        $this->instance->setSchemePaymentSubType($value);
        return $this;
    }

    /**
     * Sets scheme payment type field.
     */
    public function schemePaymentType(?string $value): self
    {
        $this->instance->setSchemePaymentType($value);
        return $this;
    }

    /**
     * Sets scheme processing date field.
     */
    public function schemeProcessingDate(?\DateTime $value): self
    {
        $this->instance->setSchemeProcessingDate($value);
        return $this;
    }

    /**
     * Sets scheme transaction id field.
     */
    public function schemeTransactionId(?string $value): self
    {
        $this->instance->setSchemeTransactionId($value);
        return $this;
    }

    /**
     * Sets senders correspondent field.
     */
    public function sendersCorrespondent(?SendersCorrespondentAccountHoldingEntity $value): self
    {
        $this->instance->setSendersCorrespondent($value);
        return $this;
    }

    /**
     * Sets settlement field.
     */
    public function settlement(?Settlement $value): self
    {
        $this->instance->setSettlement($value);
        return $this;
    }

    /**
     * Sets structured reference field.
     */
    public function structuredReference(?StructuredReference $value): self
    {
        $this->instance->setStructuredReference($value);
        return $this;
    }

    /**
     * Sets swift field.
     */
    public function swift(?Swift $value): self
    {
        $this->instance->setSwift($value);
        return $this;
    }

    /**
     * Sets ultimate beneficiary field.
     */
    public function ultimateBeneficiary(?UltimateEntity $value): self
    {
        $this->instance->setUltimateBeneficiary($value);
        return $this;
    }

    /**
     * Sets ultimate debtor field.
     */
    public function ultimateDebtor(?UltimateEntity $value): self
    {
        $this->instance->setUltimateDebtor($value);
        return $this;
    }

    /**
     * Sets unique scheme id field.
     */
    public function uniqueSchemeId(?string $value): self
    {
        $this->instance->setUniqueSchemeId($value);
        return $this;
    }

    /**
     * Sets user defined data field.
     */
    public function userDefinedData(?array $value): self
    {
        $this->instance->setUserDefinedData($value);
        return $this;
    }

    /**
     * Initializes a new payment attributes object.
     */
    public function build(): PaymentAttributes
    {
        return CoreHelper::clone($this->instance);
    }
}
