<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use Form3PublicAPILib\Models\CorrectionTransactionInformation;
use Form3PublicAPILib\Models\DuplicateTransactionInformation;
use Form3PublicAPILib\Models\PaymentTypeInformation;
use Form3PublicAPILib\Models\QueryBeneficiaryDebtorParty;
use Form3PublicAPILib\Models\QueryResponseInformation;
use Form3PublicAPILib\Models\QueryUltimateEntity;

/**
 * Builder for model QueryResponseInformation
 *
 * @see QueryResponseInformation
 */
class QueryResponseInformationBuilder
{
    /**
     * @var QueryResponseInformation
     */
    private $instance;

    private function __construct(QueryResponseInformation $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new query response information Builder object.
     */
    public static function init(): self
    {
        return new self(new QueryResponseInformation());
    }

    /**
     * Sets beneficiary party field.
     */
    public function beneficiaryParty(?QueryBeneficiaryDebtorParty $value): self
    {
        $this->instance->setBeneficiaryParty($value);
        return $this;
    }

    /**
     * Sets correction transaction information field.
     */
    public function correctionTransactionInformation(?CorrectionTransactionInformation $value): self
    {
        $this->instance->setCorrectionTransactionInformation($value);
        return $this;
    }

    /**
     * Sets debtor party field.
     */
    public function debtorParty(?QueryBeneficiaryDebtorParty $value): self
    {
        $this->instance->setDebtorParty($value);
        return $this;
    }

    /**
     * Sets duplicate transaction information field.
     */
    public function duplicateTransactionInformation(?DuplicateTransactionInformation $value): self
    {
        $this->instance->setDuplicateTransactionInformation($value);
        return $this;
    }

    /**
     * Sets payment type information field.
     */
    public function paymentTypeInformation(?PaymentTypeInformation $value): self
    {
        $this->instance->setPaymentTypeInformation($value);
        return $this;
    }

    /**
     * Sets references field.
     */
    public function references(?array $value): self
    {
        $this->instance->setReferences($value);
        return $this;
    }

    /**
     * Sets ultimate beneficiary party field.
     */
    public function ultimateBeneficiaryParty(?QueryUltimateEntity $value): self
    {
        $this->instance->setUltimateBeneficiaryParty($value);
        return $this;
    }

    /**
     * Sets ultimate debtor party field.
     */
    public function ultimateDebtorParty(?QueryUltimateEntity $value): self
    {
        $this->instance->setUltimateDebtorParty($value);
        return $this;
    }

    /**
     * Initializes a new query response information object.
     */
    public function build(): QueryResponseInformation
    {
        return CoreHelper::clone($this->instance);
    }
}
