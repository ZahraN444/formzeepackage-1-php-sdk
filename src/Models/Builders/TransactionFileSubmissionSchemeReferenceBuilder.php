<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use Form3PublicAPILib\Models\TransactionFileSubmissionSchemeReference;

/**
 * Builder for model TransactionFileSubmissionSchemeReference
 *
 * @see TransactionFileSubmissionSchemeReference
 */
class TransactionFileSubmissionSchemeReferenceBuilder
{
    /**
     * @var TransactionFileSubmissionSchemeReference
     */
    private $instance;

    private function __construct(TransactionFileSubmissionSchemeReference $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new transaction file submission scheme reference Builder object.
     */
    public static function init(): self
    {
        return new self(new TransactionFileSubmissionSchemeReference());
    }

    /**
     * Sets clearing id field.
     */
    public function clearingId(?string $value): self
    {
        $this->instance->setClearingId($value);
        return $this;
    }

    /**
     * Sets file identifier field.
     */
    public function fileIdentifier(?string $value): self
    {
        $this->instance->setFileIdentifier($value);
        return $this;
    }

    /**
     * Sets file number field.
     */
    public function fileNumber(?string $value): self
    {
        $this->instance->setFileNumber($value);
        return $this;
    }

    /**
     * Sets transaction count field.
     */
    public function transactionCount(?int $value): self
    {
        $this->instance->setTransactionCount($value);
        return $this;
    }

    /**
     * Sets transaction sum field.
     */
    public function transactionSum(?string $value): self
    {
        $this->instance->setTransactionSum($value);
        return $this;
    }

    /**
     * Initializes a new transaction file submission scheme reference object.
     */
    public function build(): TransactionFileSubmissionSchemeReference
    {
        return CoreHelper::clone($this->instance);
    }
}
