<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use Form3PublicAPILib\Models\SubscriptionUpdateAttributes;

/**
 * Builder for model SubscriptionUpdateAttributes
 *
 * @see SubscriptionUpdateAttributes
 */
class SubscriptionUpdateAttributesBuilder
{
    /**
     * @var SubscriptionUpdateAttributes
     */
    private $instance;

    private function __construct(SubscriptionUpdateAttributes $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new subscription update attributes Builder object.
     */
    public static function init(): self
    {
        return new self(new SubscriptionUpdateAttributes());
    }

    /**
     * Sets callback transport field.
     */
    public function callbackTransport(?string $value): self
    {
        $this->instance->setCallbackTransport($value);
        return $this;
    }

    /**
     * Sets callback uri field.
     */
    public function callbackUri(?string $value): self
    {
        $this->instance->setCallbackUri($value);
        return $this;
    }

    /**
     * Sets callback uris field.
     */
    public function callbackUris(?array $value): self
    {
        $this->instance->setCallbackUris($value);
        return $this;
    }

    /**
     * Sets deactivated field.
     */
    public function deactivated(?bool $value): self
    {
        $this->instance->setDeactivated($value);
        return $this;
    }

    /**
     * Sets event type field.
     */
    public function eventType(?string $value): self
    {
        $this->instance->setEventType($value);
        return $this;
    }

    /**
     * Sets filter field.
     */
    public function filter(?string $value): self
    {
        $this->instance->setFilter($value);
        return $this;
    }

    /**
     * Sets record type field.
     */
    public function recordType(?string $value): self
    {
        $this->instance->setRecordType($value);
        return $this;
    }

    /**
     * Sets user defined data field.
     */
    public function userDefinedData(?array $value): self
    {
        $this->instance->setUserDefinedData($value);
        return $this;
    }

    /**
     * Sets user id field.
     */
    public function userId(?string $value): self
    {
        $this->instance->setUserId($value);
        return $this;
    }

    /**
     * Initializes a new subscription update attributes object.
     */
    public function build(): SubscriptionUpdateAttributes
    {
        return CoreHelper::clone($this->instance);
    }
}
