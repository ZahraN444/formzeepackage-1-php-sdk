<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use Form3PublicAPILib\Models\QueryAttributes;
use Form3PublicAPILib\Models\RequestForInformationCreatorParty;

/**
 * Builder for model QueryAttributes
 *
 * @see QueryAttributes
 */
class QueryAttributesBuilder
{
    /**
     * @var QueryAttributes
     */
    private $instance;

    private function __construct(QueryAttributes $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new query attributes Builder object.
     */
    public static function init(string $queryType): self
    {
        return new self(new QueryAttributes($queryType));
    }

    /**
     * Sets agents field.
     */
    public function agents(?array $value): self
    {
        $this->instance->setAgents($value);
        return $this;
    }

    /**
     * Sets auto handled field.
     */
    public function autoHandled(?bool $value): self
    {
        $this->instance->setAutoHandled($value);
        return $this;
    }

    /**
     * Sets creator party field.
     */
    public function creatorParty(?RequestForInformationCreatorParty $value): self
    {
        $this->instance->setCreatorParty($value);
        return $this;
    }

    /**
     * Sets message id field.
     */
    public function messageId(?string $value): self
    {
        $this->instance->setMessageId($value);
        return $this;
    }

    /**
     * Sets processing date field.
     */
    public function processingDate(?\DateTime $value): self
    {
        $this->instance->setProcessingDate($value);
        return $this;
    }

    /**
     * Sets query sub types field.
     */
    public function querySubTypes(?array $value): self
    {
        $this->instance->setQuerySubTypes($value);
        return $this;
    }

    /**
     * Sets references field.
     */
    public function references(?array $value): self
    {
        $this->instance->setReferences($value);
        return $this;
    }

    /**
     * Sets requested information field.
     */
    public function requestedInformation(?array $value): self
    {
        $this->instance->setRequestedInformation($value);
        return $this;
    }

    /**
     * Sets scheme transaction id field.
     */
    public function schemeTransactionId(?string $value): self
    {
        $this->instance->setSchemeTransactionId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets unstructured message field.
     */
    public function unstructuredMessage(?string $value): self
    {
        $this->instance->setUnstructuredMessage($value);
        return $this;
    }

    /**
     * Initializes a new query attributes object.
     */
    public function build(): QueryAttributes
    {
        return CoreHelper::clone($this->instance);
    }
}
