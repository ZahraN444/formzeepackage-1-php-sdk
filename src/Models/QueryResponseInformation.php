<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class QueryResponseInformation implements \JsonSerializable
{
    /**
     * @var QueryBeneficiaryDebtorParty|null
     */
    private $beneficiaryParty;

    /**
     * @var CorrectionTransactionInformation|null
     */
    private $correctionTransactionInformation;

    /**
     * @var QueryBeneficiaryDebtorParty|null
     */
    private $debtorParty;

    /**
     * @var DuplicateTransactionInformation|null
     */
    private $duplicateTransactionInformation;

    /**
     * @var PaymentTypeInformation|null
     */
    private $paymentTypeInformation;

    /**
     * @var QueryReference[]|null
     */
    private $references;

    /**
     * @var QueryUltimateEntity|null
     */
    private $ultimateBeneficiaryParty;

    /**
     * @var QueryUltimateEntity|null
     */
    private $ultimateDebtorParty;

    /**
     * Returns Beneficiary Party.
     */
    public function getBeneficiaryParty(): ?QueryBeneficiaryDebtorParty
    {
        return $this->beneficiaryParty;
    }

    /**
     * Sets Beneficiary Party.
     *
     * @maps beneficiary_party
     */
    public function setBeneficiaryParty(?QueryBeneficiaryDebtorParty $beneficiaryParty): void
    {
        $this->beneficiaryParty = $beneficiaryParty;
    }

    /**
     * Returns Correction Transaction Information.
     * References a transaction initiated to fix the case under investigation.
     */
    public function getCorrectionTransactionInformation(): ?CorrectionTransactionInformation
    {
        return $this->correctionTransactionInformation;
    }

    /**
     * Sets Correction Transaction Information.
     * References a transaction initiated to fix the case under investigation.
     *
     * @maps correction_transaction_information
     */
    public function setCorrectionTransactionInformation(
        ?CorrectionTransactionInformation $correctionTransactionInformation
    ): void {
        $this->correctionTransactionInformation = $correctionTransactionInformation;
    }

    /**
     * Returns Debtor Party.
     */
    public function getDebtorParty(): ?QueryBeneficiaryDebtorParty
    {
        return $this->debtorParty;
    }

    /**
     * Sets Debtor Party.
     *
     * @maps debtor_party
     */
    public function setDebtorParty(?QueryBeneficiaryDebtorParty $debtorParty): void
    {
        $this->debtorParty = $debtorParty;
    }

    /**
     * Returns Duplicate Transaction Information.
     */
    public function getDuplicateTransactionInformation(): ?DuplicateTransactionInformation
    {
        return $this->duplicateTransactionInformation;
    }

    /**
     * Sets Duplicate Transaction Information.
     *
     * @maps duplicate_transaction_information
     */
    public function setDuplicateTransactionInformation(
        ?DuplicateTransactionInformation $duplicateTransactionInformation
    ): void {
        $this->duplicateTransactionInformation = $duplicateTransactionInformation;
    }

    /**
     * Returns Payment Type Information.
     * Set of elements used to further specify the type of transaction.
     */
    public function getPaymentTypeInformation(): ?PaymentTypeInformation
    {
        return $this->paymentTypeInformation;
    }

    /**
     * Sets Payment Type Information.
     * Set of elements used to further specify the type of transaction.
     *
     * @maps payment_type_information
     */
    public function setPaymentTypeInformation(?PaymentTypeInformation $paymentTypeInformation): void
    {
        $this->paymentTypeInformation = $paymentTypeInformation;
    }

    /**
     * Returns References.
     * Reference for the case ID associated to this Exception and Investigation case.
     *
     * @return QueryReference[]|null
     */
    public function getReferences(): ?array
    {
        return $this->references;
    }

    /**
     * Sets References.
     * Reference for the case ID associated to this Exception and Investigation case.
     *
     * @maps references
     *
     * @param QueryReference[]|null $references
     */
    public function setReferences(?array $references): void
    {
        $this->references = $references;
    }

    /**
     * Returns Ultimate Beneficiary Party.
     */
    public function getUltimateBeneficiaryParty(): ?QueryUltimateEntity
    {
        return $this->ultimateBeneficiaryParty;
    }

    /**
     * Sets Ultimate Beneficiary Party.
     *
     * @maps ultimate_beneficiary_party
     */
    public function setUltimateBeneficiaryParty(?QueryUltimateEntity $ultimateBeneficiaryParty): void
    {
        $this->ultimateBeneficiaryParty = $ultimateBeneficiaryParty;
    }

    /**
     * Returns Ultimate Debtor Party.
     */
    public function getUltimateDebtorParty(): ?QueryUltimateEntity
    {
        return $this->ultimateDebtorParty;
    }

    /**
     * Sets Ultimate Debtor Party.
     *
     * @maps ultimate_debtor_party
     */
    public function setUltimateDebtorParty(?QueryUltimateEntity $ultimateDebtorParty): void
    {
        $this->ultimateDebtorParty = $ultimateDebtorParty;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->beneficiaryParty)) {
            $json['beneficiary_party']                  = $this->beneficiaryParty;
        }
        if (isset($this->correctionTransactionInformation)) {
            $json['correction_transaction_information'] = $this->correctionTransactionInformation;
        }
        if (isset($this->debtorParty)) {
            $json['debtor_party']                       = $this->debtorParty;
        }
        if (isset($this->duplicateTransactionInformation)) {
            $json['duplicate_transaction_information']  = $this->duplicateTransactionInformation;
        }
        if (isset($this->paymentTypeInformation)) {
            $json['payment_type_information']           = $this->paymentTypeInformation;
        }
        if (isset($this->references)) {
            $json['references']                         = $this->references;
        }
        if (isset($this->ultimateBeneficiaryParty)) {
            $json['ultimate_beneficiary_party']         = $this->ultimateBeneficiaryParty;
        }
        if (isset($this->ultimateDebtorParty)) {
            $json['ultimate_debtor_party']              = $this->ultimateDebtorParty;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
