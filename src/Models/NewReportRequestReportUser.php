<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class NewReportRequestReportUser implements \JsonSerializable
{
    /**
     * @var string
     */
    private $userId;

    /**
     * @var string
     */
    private $userIdCode;

    /**
     * @param string $userId
     * @param string $userIdCode
     */
    public function __construct(string $userId, string $userIdCode)
    {
        $this->userId = $userId;
        $this->userIdCode = $userIdCode;
    }

    /**
     * Returns User Id.
     * Identifies a user or organization
     */
    public function getUserId(): string
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     * Identifies a user or organization
     *
     * @required
     * @maps user_id
     */
    public function setUserId(string $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns User Id Code.
     */
    public function getUserIdCode(): string
    {
        return $this->userIdCode;
    }

    /**
     * Sets User Id Code.
     *
     * @required
     * @maps user_id_code
     * @factory \Form3PublicAPILib\Models\ReportRequestUserIdCodeEnum::checkValue
     */
    public function setUserIdCode(string $userIdCode): void
    {
        $this->userIdCode = $userIdCode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['user_id']      = $this->userId;
        $json['user_id_code'] = ReportRequestUserIdCodeEnum::checkValue($this->userIdCode);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
