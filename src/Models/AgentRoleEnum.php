<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Role of the agent in the payment chain. Enum of pre-defined values, new values can be added when
 * needed
 */
class AgentRoleEnum
{
    public const INTERMEDIARYAGENT1 = 'IntermediaryAgent1';

    public const INTERMEDIARYAGENT2 = 'IntermediaryAgent2';

    public const INTERMEDIARYAGENT3 = 'IntermediaryAgent3';

    public const INSTRUCTINGAGENT = 'InstructingAgent';

    public const INSTRUCTEDAGENT = 'InstructedAgent';

    public const ADDITIONALBENEFICIARYPARTYAGENTINFORMATION = 'AdditionalBeneficiaryPartyAgentInformation';

    public const CREDITORAGENT = 'CreditorAgent';

    public const DEBTORAGENT = 'DebtorAgent';

    private const _ALL_VALUES = [
        self::INTERMEDIARYAGENT1,
        self::INTERMEDIARYAGENT2,
        self::INTERMEDIARYAGENT3,
        self::INSTRUCTINGAGENT,
        self::INSTRUCTEDAGENT,
        self::ADDITIONALBENEFICIARYPARTYAGENTINFORMATION,
        self::CREDITORAGENT,
        self::DEBTORAGENT
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for AgentRoleEnum.");
    }
}
