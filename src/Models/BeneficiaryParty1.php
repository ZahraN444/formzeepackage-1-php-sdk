<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use Form3PublicAPILib\Utils\DateTimeHelper;
use stdClass;

class BeneficiaryParty1 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $accountNumber;

    /**
     * @var string|null
     */
    private $accountNumberCode;

    /**
     * @var BeneficiaryDebtorAccountProxy|null
     */
    private $accountProxy;

    /**
     * @var int|null
     */
    private $accountType;

    /**
     * @var BeneficiaryDebtorAccountHoldingEntity|null
     */
    private $accountWith;

    /**
     * @var string|null
     */
    private $additionalAddressLine;

    /**
     * @var string[]|null
     */
    private $address;

    /**
     * @var string|null
     */
    private $birthCity;

    /**
     * @var string|null
     */
    private $birthCountry;

    /**
     * @var \DateTime|null
     */
    private $birthDate;

    /**
     * @var string|null
     */
    private $birthProvince;

    /**
     * @var string|null
     */
    private $buildingNumber;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $countryOfResidence;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $organisationIdentification;

    /**
     * @var string|null
     */
    private $organisationIdentificationCode;

    /**
     * @var string|null
     */
    private $organisationIdentificationIssuer;

    /**
     * @var string|null
     */
    private $organisationIdentificationScheme;

    /**
     * @var BeneficiaryDebtorOrganisationIdentification[]|null
     */
    private $organisationIdentifications;

    /**
     * @var string|null
     */
    private $postCode;

    /**
     * @var PrivateIdentification|null
     */
    private $privateIdentification;

    /**
     * @var string|null
     */
    private $province;

    /**
     * @var string|null
     */
    private $streetName;

    /**
     * @var string|null
     */
    private $telephoneNumber;

    /**
     * Returns Account Name.
     * Name of beneficiary as given with account
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * Name of beneficiary as given with account
     *
     * @maps account_name
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Account Number.
     * Beneficiary account number
     */
    public function getAccountNumber(): ?string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Beneficiary account number
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Number Code.
     * The type of identification given at `account_number` attribute
     */
    public function getAccountNumberCode(): ?string
    {
        return $this->accountNumberCode;
    }

    /**
     * Sets Account Number Code.
     * The type of identification given at `account_number` attribute
     *
     * @maps account_number_code
     * @factory \Form3PublicAPILib\Models\AccountNumberCodeEnum::checkValue
     */
    public function setAccountNumberCode(?string $accountNumberCode): void
    {
        $this->accountNumberCode = $accountNumberCode;
    }

    /**
     * Returns Account Proxy.
     */
    public function getAccountProxy(): ?BeneficiaryDebtorAccountProxy
    {
        return $this->accountProxy;
    }

    /**
     * Sets Account Proxy.
     *
     * @maps account_proxy
     */
    public function setAccountProxy(?BeneficiaryDebtorAccountProxy $accountProxy): void
    {
        $this->accountProxy = $accountProxy;
    }

    /**
     * Returns Account Type.
     * The type of the account given with `beneficiary_party.account_number`. Single digit number. Only
     * required if requested by the beneficiary party. Defaults to 0.
     */
    public function getAccountType(): ?int
    {
        return $this->accountType;
    }

    /**
     * Sets Account Type.
     * The type of the account given with `beneficiary_party.account_number`. Single digit number. Only
     * required if requested by the beneficiary party. Defaults to 0.
     *
     * @maps account_type
     */
    public function setAccountType(?int $accountType): void
    {
        $this->accountType = $accountType;
    }

    /**
     * Returns Account With.
     */
    public function getAccountWith(): ?BeneficiaryDebtorAccountHoldingEntity
    {
        return $this->accountWith;
    }

    /**
     * Sets Account With.
     *
     * @maps account_with
     */
    public function setAccountWith(?BeneficiaryDebtorAccountHoldingEntity $accountWith): void
    {
        $this->accountWith = $accountWith;
    }

    /**
     * Returns Additional Address Line.
     * Additional address line of the beneficiary address
     */
    public function getAdditionalAddressLine(): ?string
    {
        return $this->additionalAddressLine;
    }

    /**
     * Sets Additional Address Line.
     * Additional address line of the beneficiary address
     *
     * @maps additional_address_line
     */
    public function setAdditionalAddressLine(?string $additionalAddressLine): void
    {
        $this->additionalAddressLine = $additionalAddressLine;
    }

    /**
     * Returns Address.
     * Beneficiary address
     *
     * @return string[]|null
     */
    public function getAddress(): ?array
    {
        return $this->address;
    }

    /**
     * Sets Address.
     * Beneficiary address
     *
     * @maps address
     *
     * @param string[]|null $address
     */
    public function setAddress(?array $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Birth City.
     * Beneficiary birth city
     */
    public function getBirthCity(): ?string
    {
        return $this->birthCity;
    }

    /**
     * Sets Birth City.
     * Beneficiary birth city
     *
     * @maps birth_city
     */
    public function setBirthCity(?string $birthCity): void
    {
        $this->birthCity = $birthCity;
    }

    /**
     * Returns Birth Country.
     * Beneficiary birth country, ISO 3166 format country code
     */
    public function getBirthCountry(): ?string
    {
        return $this->birthCountry;
    }

    /**
     * Sets Birth Country.
     * Beneficiary birth country, ISO 3166 format country code
     *
     * @maps birth_country
     */
    public function setBirthCountry(?string $birthCountry): void
    {
        $this->birthCountry = $birthCountry;
    }

    /**
     * Returns Birth Date.
     * Beneficiary birth date. Formatted according to ISO 8601 format: YYYY-MM-DD
     */
    public function getBirthDate(): ?\DateTime
    {
        return $this->birthDate;
    }

    /**
     * Sets Birth Date.
     * Beneficiary birth date. Formatted according to ISO 8601 format: YYYY-MM-DD
     *
     * @maps birth_date
     * @factory \Form3PublicAPILib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setBirthDate(?\DateTime $birthDate): void
    {
        $this->birthDate = $birthDate;
    }

    /**
     * Returns Birth Province.
     * Beneficiary birth province
     */
    public function getBirthProvince(): ?string
    {
        return $this->birthProvince;
    }

    /**
     * Sets Birth Province.
     * Beneficiary birth province
     *
     * @maps birth_province
     */
    public function setBirthProvince(?string $birthProvince): void
    {
        $this->birthProvince = $birthProvince;
    }

    /**
     * Returns Building Number.
     * Building number of the beneficiary address
     */
    public function getBuildingNumber(): ?string
    {
        return $this->buildingNumber;
    }

    /**
     * Sets Building Number.
     * Building number of the beneficiary address
     *
     * @maps building_number
     */
    public function setBuildingNumber(?string $buildingNumber): void
    {
        $this->buildingNumber = $buildingNumber;
    }

    /**
     * Returns City.
     * City/Town of the Beneficiary address
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City/Town of the Beneficiary address
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns Country.
     * Country of the beneficiary address, ISO 3166 format country code
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Country of the beneficiary address, ISO 3166 format country code
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Country of Residence.
     * Country of residence of the beneficiary party, ISO 3166 format country code
     */
    public function getCountryOfResidence(): ?string
    {
        return $this->countryOfResidence;
    }

    /**
     * Sets Country of Residence.
     * Country of residence of the beneficiary party, ISO 3166 format country code
     *
     * @maps country_of_residence
     */
    public function setCountryOfResidence(?string $countryOfResidence): void
    {
        $this->countryOfResidence = $countryOfResidence;
    }

    /**
     * Returns Name.
     * Beneficiary name
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Beneficiary name
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Organisation Identification.
     * Organisation identification of a beneficiary, used in the case that the beneficiary is an
     * organisation and not a private person
     */
    public function getOrganisationIdentification(): ?string
    {
        return $this->organisationIdentification;
    }

    /**
     * Sets Organisation Identification.
     * Organisation identification of a beneficiary, used in the case that the beneficiary is an
     * organisation and not a private person
     *
     * @maps organisation_identification
     */
    public function setOrganisationIdentification(?string $organisationIdentification): void
    {
        $this->organisationIdentification = $organisationIdentification;
    }

    /**
     * Returns Organisation Identification Code.
     * The code that specifies the type of `organisation_identification`
     */
    public function getOrganisationIdentificationCode(): ?string
    {
        return $this->organisationIdentificationCode;
    }

    /**
     * Sets Organisation Identification Code.
     * The code that specifies the type of `organisation_identification`
     *
     * @maps organisation_identification_code
     */
    public function setOrganisationIdentificationCode(?string $organisationIdentificationCode): void
    {
        $this->organisationIdentificationCode = $organisationIdentificationCode;
    }

    /**
     * Returns Organisation Identification Issuer.
     * Issuer of the `organisation_identification`
     */
    public function getOrganisationIdentificationIssuer(): ?string
    {
        return $this->organisationIdentificationIssuer;
    }

    /**
     * Sets Organisation Identification Issuer.
     * Issuer of the `organisation_identification`
     *
     * @maps organisation_identification_issuer
     */
    public function setOrganisationIdentificationIssuer(?string $organisationIdentificationIssuer): void
    {
        $this->organisationIdentificationIssuer = $organisationIdentificationIssuer;
    }

    /**
     * Returns Organisation Identification Scheme.
     * The code that specifies the scheme of `organisation_identification`
     */
    public function getOrganisationIdentificationScheme(): ?string
    {
        return $this->organisationIdentificationScheme;
    }

    /**
     * Sets Organisation Identification Scheme.
     * The code that specifies the scheme of `organisation_identification`
     *
     * @maps organisation_identification_scheme
     */
    public function setOrganisationIdentificationScheme(?string $organisationIdentificationScheme): void
    {
        $this->organisationIdentificationScheme = $organisationIdentificationScheme;
    }

    /**
     * Returns Organisation Identifications.
     * Array for additional ID(s) of beneficiary organisation
     *
     * @return BeneficiaryDebtorOrganisationIdentification[]|null
     */
    public function getOrganisationIdentifications(): ?array
    {
        return $this->organisationIdentifications;
    }

    /**
     * Sets Organisation Identifications.
     * Array for additional ID(s) of beneficiary organisation
     *
     * @maps organisation_identifications
     *
     * @param BeneficiaryDebtorOrganisationIdentification[]|null $organisationIdentifications
     */
    public function setOrganisationIdentifications(?array $organisationIdentifications): void
    {
        $this->organisationIdentifications = $organisationIdentifications;
    }

    /**
     * Returns Post Code.
     * Post code of the beneficiary address
     */
    public function getPostCode(): ?string
    {
        return $this->postCode;
    }

    /**
     * Sets Post Code.
     * Post code of the beneficiary address
     *
     * @maps post_code
     */
    public function setPostCode(?string $postCode): void
    {
        $this->postCode = $postCode;
    }

    /**
     * Returns Private Identification.
     */
    public function getPrivateIdentification(): ?PrivateIdentification
    {
        return $this->privateIdentification;
    }

    /**
     * Sets Private Identification.
     *
     * @maps private_identification
     */
    public function setPrivateIdentification(?PrivateIdentification $privateIdentification): void
    {
        $this->privateIdentification = $privateIdentification;
    }

    /**
     * Returns Province.
     * Province of the beneficiary address
     */
    public function getProvince(): ?string
    {
        return $this->province;
    }

    /**
     * Sets Province.
     * Province of the beneficiary address
     *
     * @maps province
     */
    public function setProvince(?string $province): void
    {
        $this->province = $province;
    }

    /**
     * Returns Street Name.
     * Street name of the beneficiary address
     */
    public function getStreetName(): ?string
    {
        return $this->streetName;
    }

    /**
     * Sets Street Name.
     * Street name of the beneficiary address
     *
     * @maps street_name
     */
    public function setStreetName(?string $streetName): void
    {
        $this->streetName = $streetName;
    }

    /**
     * Returns Telephone Number.
     * Beneficiary phone number
     */
    public function getTelephoneNumber(): ?string
    {
        return $this->telephoneNumber;
    }

    /**
     * Sets Telephone Number.
     * Beneficiary phone number
     *
     * @maps telephone_number
     */
    public function setTelephoneNumber(?string $telephoneNumber): void
    {
        $this->telephoneNumber = $telephoneNumber;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['account_name']                       = $this->accountName;
        }
        if (isset($this->accountNumber)) {
            $json['account_number']                     = $this->accountNumber;
        }
        if (isset($this->accountNumberCode)) {
            $json['account_number_code']                = AccountNumberCodeEnum::checkValue($this->accountNumberCode);
        }
        if (isset($this->accountProxy)) {
            $json['account_proxy']                      = $this->accountProxy;
        }
        if (isset($this->accountType)) {
            $json['account_type']                       = $this->accountType;
        }
        if (isset($this->accountWith)) {
            $json['account_with']                       = $this->accountWith;
        }
        if (isset($this->additionalAddressLine)) {
            $json['additional_address_line']            = $this->additionalAddressLine;
        }
        if (isset($this->address)) {
            $json['address']                            = $this->address;
        }
        if (isset($this->birthCity)) {
            $json['birth_city']                         = $this->birthCity;
        }
        if (isset($this->birthCountry)) {
            $json['birth_country']                      = $this->birthCountry;
        }
        if (isset($this->birthDate)) {
            $json['birth_date']                         = DateTimeHelper::toSimpleDate($this->birthDate);
        }
        if (isset($this->birthProvince)) {
            $json['birth_province']                     = $this->birthProvince;
        }
        if (isset($this->buildingNumber)) {
            $json['building_number']                    = $this->buildingNumber;
        }
        if (isset($this->city)) {
            $json['city']                               = $this->city;
        }
        if (isset($this->country)) {
            $json['country']                            = $this->country;
        }
        if (isset($this->countryOfResidence)) {
            $json['country_of_residence']               = $this->countryOfResidence;
        }
        if (isset($this->name)) {
            $json['name']                               = $this->name;
        }
        if (isset($this->organisationIdentification)) {
            $json['organisation_identification']        = $this->organisationIdentification;
        }
        if (isset($this->organisationIdentificationCode)) {
            $json['organisation_identification_code']   = $this->organisationIdentificationCode;
        }
        if (isset($this->organisationIdentificationIssuer)) {
            $json['organisation_identification_issuer'] = $this->organisationIdentificationIssuer;
        }
        if (isset($this->organisationIdentificationScheme)) {
            $json['organisation_identification_scheme'] = $this->organisationIdentificationScheme;
        }
        if (isset($this->organisationIdentifications)) {
            $json['organisation_identifications']       = $this->organisationIdentifications;
        }
        if (isset($this->postCode)) {
            $json['post_code']                          = $this->postCode;
        }
        if (isset($this->privateIdentification)) {
            $json['private_identification']             = $this->privateIdentification;
        }
        if (isset($this->province)) {
            $json['province']                           = $this->province;
        }
        if (isset($this->streetName)) {
            $json['street_name']                        = $this->streetName;
        }
        if (isset($this->telephoneNumber)) {
            $json['telephone_number']                   = $this->telephoneNumber;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
