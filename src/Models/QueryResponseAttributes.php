<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class QueryResponseAttributes implements \JsonSerializable
{
    /**
     * @var string
     */
    private $answer;

    /**
     * @var QueryResponseCharges|null
     */
    private $charges;

    /**
     * @var QueryResponseCompensation|null
     */
    private $compensation;

    /**
     * @var string|null
     */
    private $compensationAmount;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var QueryResponseInformation|null
     */
    private $information;

    /**
     * @var string|null
     */
    private $statusCode;

    /**
     * @param string $answer
     */
    public function __construct(string $answer)
    {
        $this->answer = $answer;
    }

    /**
     * Returns Answer.
     */
    public function getAnswer(): string
    {
        return $this->answer;
    }

    /**
     * Sets Answer.
     *
     * @required
     * @maps answer
     * @factory \Form3PublicAPILib\Models\QueryResponseAnswerEnum::checkValue
     */
    public function setAnswer(string $answer): void
    {
        $this->answer = $answer;
    }

    /**
     * Returns Charges.
     */
    public function getCharges(): ?QueryResponseCharges
    {
        return $this->charges;
    }

    /**
     * Sets Charges.
     *
     * @maps charges
     */
    public function setCharges(?QueryResponseCharges $charges): void
    {
        $this->charges = $charges;
    }

    /**
     * Returns Compensation.
     */
    public function getCompensation(): ?QueryResponseCompensation
    {
        return $this->compensation;
    }

    /**
     * Sets Compensation.
     *
     * @maps compensation
     */
    public function setCompensation(?QueryResponseCompensation $compensation): void
    {
        $this->compensation = $compensation;
    }

    /**
     * Returns Compensation Amount.
     */
    public function getCompensationAmount(): ?string
    {
        return $this->compensationAmount;
    }

    /**
     * Sets Compensation Amount.
     *
     * @maps compensation_amount
     */
    public function setCompensationAmount(?string $compensationAmount): void
    {
        $this->compensationAmount = $compensationAmount;
    }

    /**
     * Returns Currency.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Information.
     */
    public function getInformation(): ?QueryResponseInformation
    {
        return $this->information;
    }

    /**
     * Sets Information.
     *
     * @maps information
     */
    public function setInformation(?QueryResponseInformation $information): void
    {
        $this->information = $information;
    }

    /**
     * Returns Status Code.
     */
    public function getStatusCode(): ?string
    {
        return $this->statusCode;
    }

    /**
     * Sets Status Code.
     *
     * @maps status_code
     * @factory \Form3PublicAPILib\Models\QueryResponseStatusCodeEnum::checkValue
     */
    public function setStatusCode(?string $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['answer']                  = QueryResponseAnswerEnum::checkValue($this->answer);
        if (isset($this->charges)) {
            $json['charges']             = $this->charges;
        }
        if (isset($this->compensation)) {
            $json['compensation']        = $this->compensation;
        }
        if (isset($this->compensationAmount)) {
            $json['compensation_amount'] = $this->compensationAmount;
        }
        if (isset($this->currency)) {
            $json['currency']            = $this->currency;
        }
        if (isset($this->information)) {
            $json['information']         = $this->information;
        }
        if (isset($this->statusCode)) {
            $json['status_code']         = QueryResponseStatusCodeEnum::checkValue($this->statusCode);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
