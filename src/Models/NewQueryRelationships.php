<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class NewQueryRelationships implements \JsonSerializable
{
    /**
     * @var RelationshipsPayment|null
     */
    private $payment;

    /**
     * @var RelationshipsPaymentAdmission|null
     */
    private $paymentAdmission;

    /**
     * @var RelationshipsPaymentSubmission|null
     */
    private $paymentSubmission;

    /**
     * @var RelationshipsQuery|null
     */
    private $query;

    /**
     * @var RelationshipsPaymentRecall|null
     */
    private $recall;

    /**
     * @var RelationshipsPaymentRecallSubmission|null
     */
    private $recallSubmission;

    /**
     * Returns Payment.
     */
    public function getPayment(): ?RelationshipsPayment
    {
        return $this->payment;
    }

    /**
     * Sets Payment.
     *
     * @maps payment
     */
    public function setPayment(?RelationshipsPayment $payment): void
    {
        $this->payment = $payment;
    }

    /**
     * Returns Payment Admission.
     */
    public function getPaymentAdmission(): ?RelationshipsPaymentAdmission
    {
        return $this->paymentAdmission;
    }

    /**
     * Sets Payment Admission.
     *
     * @maps payment_admission
     */
    public function setPaymentAdmission(?RelationshipsPaymentAdmission $paymentAdmission): void
    {
        $this->paymentAdmission = $paymentAdmission;
    }

    /**
     * Returns Payment Submission.
     */
    public function getPaymentSubmission(): ?RelationshipsPaymentSubmission
    {
        return $this->paymentSubmission;
    }

    /**
     * Sets Payment Submission.
     *
     * @maps payment_submission
     */
    public function setPaymentSubmission(?RelationshipsPaymentSubmission $paymentSubmission): void
    {
        $this->paymentSubmission = $paymentSubmission;
    }

    /**
     * Returns Query.
     */
    public function getQuery(): ?RelationshipsQuery
    {
        return $this->query;
    }

    /**
     * Sets Query.
     *
     * @maps query
     */
    public function setQuery(?RelationshipsQuery $query): void
    {
        $this->query = $query;
    }

    /**
     * Returns Recall.
     */
    public function getRecall(): ?RelationshipsPaymentRecall
    {
        return $this->recall;
    }

    /**
     * Sets Recall.
     *
     * @maps recall
     */
    public function setRecall(?RelationshipsPaymentRecall $recall): void
    {
        $this->recall = $recall;
    }

    /**
     * Returns Recall Submission.
     */
    public function getRecallSubmission(): ?RelationshipsPaymentRecallSubmission
    {
        return $this->recallSubmission;
    }

    /**
     * Sets Recall Submission.
     *
     * @maps recall_submission
     */
    public function setRecallSubmission(?RelationshipsPaymentRecallSubmission $recallSubmission): void
    {
        $this->recallSubmission = $recallSubmission;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->payment)) {
            $json['payment']            = $this->payment;
        }
        if (isset($this->paymentAdmission)) {
            $json['payment_admission']  = $this->paymentAdmission;
        }
        if (isset($this->paymentSubmission)) {
            $json['payment_submission'] = $this->paymentSubmission;
        }
        if (isset($this->query)) {
            $json['query']              = $this->query;
        }
        if (isset($this->recall)) {
            $json['recall']             = $this->recall;
        }
        if (isset($this->recallSubmission)) {
            $json['recall_submission']  = $this->recallSubmission;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
