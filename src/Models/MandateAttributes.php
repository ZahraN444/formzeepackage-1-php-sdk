<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use Form3PublicAPILib\Utils\DateTimeHelper;
use stdClass;

class MandateAttributes implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $amount;

    /**
     * @var MandateAttributesBeneficiaryParty|null
     */
    private $beneficiaryParty;

    /**
     * @var string|null
     */
    private $clearingId;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var MandateAttributesDebtorParty|null
     */
    private $debtorParty;

    /**
     * @var string|null
     */
    private $frequency;

    /**
     * @var string|null
     */
    private $numericReference;

    /**
     * @var string|null
     */
    private $paymentScheme;

    /**
     * @var \DateTime|null
     */
    private $processingDate;

    /**
     * @var string|null
     */
    private $reference;

    /**
     * @var string|null
     */
    private $schemePaymentType;

    /**
     * @var \DateTime|null
     */
    private $schemeProcessingDate;

    /**
     * @var string|null
     */
    private $source;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $statusReason;

    /**
     * @var string|null
     */
    private $uniqueSchemeId;

    /**
     * Returns Amount.
     */
    public function getAmount(): ?string
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @maps amount
     */
    public function setAmount(?string $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Beneficiary Party.
     */
    public function getBeneficiaryParty(): ?MandateAttributesBeneficiaryParty
    {
        return $this->beneficiaryParty;
    }

    /**
     * Sets Beneficiary Party.
     *
     * @maps beneficiary_party
     */
    public function setBeneficiaryParty(?MandateAttributesBeneficiaryParty $beneficiaryParty): void
    {
        $this->beneficiaryParty = $beneficiaryParty;
    }

    /**
     * Returns Clearing Id.
     */
    public function getClearingId(): ?string
    {
        return $this->clearingId;
    }

    /**
     * Sets Clearing Id.
     *
     * @maps clearing_id
     */
    public function setClearingId(?string $clearingId): void
    {
        $this->clearingId = $clearingId;
    }

    /**
     * Returns Currency.
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Debtor Party.
     */
    public function getDebtorParty(): ?MandateAttributesDebtorParty
    {
        return $this->debtorParty;
    }

    /**
     * Sets Debtor Party.
     *
     * @maps debtor_party
     */
    public function setDebtorParty(?MandateAttributesDebtorParty $debtorParty): void
    {
        $this->debtorParty = $debtorParty;
    }

    /**
     * Returns Frequency.
     */
    public function getFrequency(): ?string
    {
        return $this->frequency;
    }

    /**
     * Sets Frequency.
     *
     * @maps frequency
     * @factory \Form3PublicAPILib\Models\MandateFrequencyEnum::checkValue
     */
    public function setFrequency(?string $frequency): void
    {
        $this->frequency = $frequency;
    }

    /**
     * Returns Numeric Reference.
     */
    public function getNumericReference(): ?string
    {
        return $this->numericReference;
    }

    /**
     * Sets Numeric Reference.
     *
     * @maps numeric_reference
     */
    public function setNumericReference(?string $numericReference): void
    {
        $this->numericReference = $numericReference;
    }

    /**
     * Returns Payment Scheme.
     */
    public function getPaymentScheme(): ?string
    {
        return $this->paymentScheme;
    }

    /**
     * Sets Payment Scheme.
     *
     * @maps payment_scheme
     */
    public function setPaymentScheme(?string $paymentScheme): void
    {
        $this->paymentScheme = $paymentScheme;
    }

    /**
     * Returns Processing Date.
     */
    public function getProcessingDate(): ?\DateTime
    {
        return $this->processingDate;
    }

    /**
     * Sets Processing Date.
     *
     * @maps processing_date
     * @factory \Form3PublicAPILib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setProcessingDate(?\DateTime $processingDate): void
    {
        $this->processingDate = $processingDate;
    }

    /**
     * Returns Reference.
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * Sets Reference.
     *
     * @maps reference
     */
    public function setReference(?string $reference): void
    {
        $this->reference = $reference;
    }

    /**
     * Returns Scheme Payment Type.
     */
    public function getSchemePaymentType(): ?string
    {
        return $this->schemePaymentType;
    }

    /**
     * Sets Scheme Payment Type.
     *
     * @maps scheme_payment_type
     */
    public function setSchemePaymentType(?string $schemePaymentType): void
    {
        $this->schemePaymentType = $schemePaymentType;
    }

    /**
     * Returns Scheme Processing Date.
     */
    public function getSchemeProcessingDate(): ?\DateTime
    {
        return $this->schemeProcessingDate;
    }

    /**
     * Sets Scheme Processing Date.
     *
     * @maps scheme_processing_date
     * @factory \Form3PublicAPILib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setSchemeProcessingDate(?\DateTime $schemeProcessingDate): void
    {
        $this->schemeProcessingDate = $schemeProcessingDate;
    }

    /**
     * Returns Source.
     */
    public function getSource(): ?string
    {
        return $this->source;
    }

    /**
     * Sets Source.
     *
     * @maps source
     */
    public function setSource(?string $source): void
    {
        $this->source = $source;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     * @factory \Form3PublicAPILib\Models\MandateStatusEnum::checkValue
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Status Reason.
     */
    public function getStatusReason(): ?string
    {
        return $this->statusReason;
    }

    /**
     * Sets Status Reason.
     *
     * @maps status_reason
     */
    public function setStatusReason(?string $statusReason): void
    {
        $this->statusReason = $statusReason;
    }

    /**
     * Returns Unique Scheme Id.
     */
    public function getUniqueSchemeId(): ?string
    {
        return $this->uniqueSchemeId;
    }

    /**
     * Sets Unique Scheme Id.
     *
     * @maps unique_scheme_id
     */
    public function setUniqueSchemeId(?string $uniqueSchemeId): void
    {
        $this->uniqueSchemeId = $uniqueSchemeId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->amount)) {
            $json['amount']                 = $this->amount;
        }
        if (isset($this->beneficiaryParty)) {
            $json['beneficiary_party']      = $this->beneficiaryParty;
        }
        if (isset($this->clearingId)) {
            $json['clearing_id']            = $this->clearingId;
        }
        if (isset($this->currency)) {
            $json['currency']               = $this->currency;
        }
        if (isset($this->debtorParty)) {
            $json['debtor_party']           = $this->debtorParty;
        }
        if (isset($this->frequency)) {
            $json['frequency']              = MandateFrequencyEnum::checkValue($this->frequency);
        }
        if (isset($this->numericReference)) {
            $json['numeric_reference']      = $this->numericReference;
        }
        if (isset($this->paymentScheme)) {
            $json['payment_scheme']         = $this->paymentScheme;
        }
        if (isset($this->processingDate)) {
            $json['processing_date']        = DateTimeHelper::toSimpleDate($this->processingDate);
        }
        if (isset($this->reference)) {
            $json['reference']              = $this->reference;
        }
        if (isset($this->schemePaymentType)) {
            $json['scheme_payment_type']    = $this->schemePaymentType;
        }
        if (isset($this->schemeProcessingDate)) {
            $json['scheme_processing_date'] = DateTimeHelper::toSimpleDate($this->schemeProcessingDate);
        }
        if (isset($this->source)) {
            $json['source']                 = $this->source;
        }
        if (isset($this->status)) {
            $json['status']                 = MandateStatusEnum::checkValue($this->status);
        }
        if (isset($this->statusReason)) {
            $json['status_reason']          = $this->statusReason;
        }
        if (isset($this->uniqueSchemeId)) {
            $json['unique_scheme_id']       = $this->uniqueSchemeId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
