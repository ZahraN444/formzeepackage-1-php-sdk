<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class BACS implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $acceptsPayments = false;

    /**
     * @var string|null
     */
    private $accountSwitching;

    /**
     * @var string[]|null
     */
    private $allowedTransactions;

    /**
     * @var string|null
     */
    private $serviceStatus;

    /**
     * Returns Accepts Payments.
     */
    public function getAcceptsPayments(): ?bool
    {
        return $this->acceptsPayments;
    }

    /**
     * Sets Accepts Payments.
     *
     * @maps accepts_payments
     */
    public function setAcceptsPayments(?bool $acceptsPayments): void
    {
        $this->acceptsPayments = $acceptsPayments;
    }

    /**
     * Returns Account Switching.
     */
    public function getAccountSwitching(): ?string
    {
        return $this->accountSwitching;
    }

    /**
     * Sets Account Switching.
     *
     * @maps account_switching
     * @factory \Form3PublicAPILib\Models\AccountSwitchingEnum::checkValue
     */
    public function setAccountSwitching(?string $accountSwitching): void
    {
        $this->accountSwitching = $accountSwitching;
    }

    /**
     * Returns Allowed Transactions.
     *
     * @return string[]|null
     */
    public function getAllowedTransactions(): ?array
    {
        return $this->allowedTransactions;
    }

    /**
     * Sets Allowed Transactions.
     *
     * @maps allowed_transactions
     * @factory \Form3PublicAPILib\Models\TransactionGroupCodeEnum::checkValue
     *
     * @param string[]|null $allowedTransactions
     */
    public function setAllowedTransactions(?array $allowedTransactions): void
    {
        $this->allowedTransactions = $allowedTransactions;
    }

    /**
     * Returns Service Status.
     */
    public function getServiceStatus(): ?string
    {
        return $this->serviceStatus;
    }

    /**
     * Sets Service Status.
     *
     * @maps service_status
     */
    public function setServiceStatus(?string $serviceStatus): void
    {
        $this->serviceStatus = $serviceStatus;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->acceptsPayments)) {
            $json['accepts_payments']     = $this->acceptsPayments;
        }
        if (isset($this->accountSwitching)) {
            $json['account_switching']    = AccountSwitchingEnum::checkValue($this->accountSwitching);
        }
        if (isset($this->allowedTransactions)) {
            $json['allowed_transactions'] = TransactionGroupCodeEnum::checkValue($this->allowedTransactions);
        }
        if (isset($this->serviceStatus)) {
            $json['service_status']       = $this->serviceStatus;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
