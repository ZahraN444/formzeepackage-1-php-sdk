<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class MandateAttributesBeneficiaryParty implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $accountNumber;

    /**
     * @var string|null
     */
    private $accountNumberCode;

    /**
     * @var int|null
     */
    private $accountType;

    /**
     * @var AccountHoldingEntity|null
     */
    private $accountWith;

    /**
     * @var string[]|null
     */
    private $address;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var PrivateIdentification|null
     */
    private $privateIdentification;

    /**
     * Returns Account Name.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     *
     * @maps account_name
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): ?string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Number Code.
     * The type of identification given at `account_number` attribute
     */
    public function getAccountNumberCode(): ?string
    {
        return $this->accountNumberCode;
    }

    /**
     * Sets Account Number Code.
     * The type of identification given at `account_number` attribute
     *
     * @maps account_number_code
     * @factory \Form3PublicAPILib\Models\AccountNumberCodeEnum::checkValue
     */
    public function setAccountNumberCode(?string $accountNumberCode): void
    {
        $this->accountNumberCode = $accountNumberCode;
    }

    /**
     * Returns Account Type.
     */
    public function getAccountType(): ?int
    {
        return $this->accountType;
    }

    /**
     * Sets Account Type.
     *
     * @maps account_type
     */
    public function setAccountType(?int $accountType): void
    {
        $this->accountType = $accountType;
    }

    /**
     * Returns Account With.
     * Information about the financial institution servicing the account.
     */
    public function getAccountWith(): ?AccountHoldingEntity
    {
        return $this->accountWith;
    }

    /**
     * Sets Account With.
     * Information about the financial institution servicing the account.
     *
     * @maps account_with
     */
    public function setAccountWith(?AccountHoldingEntity $accountWith): void
    {
        $this->accountWith = $accountWith;
    }

    /**
     * Returns Address.
     *
     * @return string[]|null
     */
    public function getAddress(): ?array
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * @maps address
     *
     * @param string[]|null $address
     */
    public function setAddress(?array $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Country.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Private Identification.
     */
    public function getPrivateIdentification(): ?PrivateIdentification
    {
        return $this->privateIdentification;
    }

    /**
     * Sets Private Identification.
     *
     * @maps private_identification
     */
    public function setPrivateIdentification(?PrivateIdentification $privateIdentification): void
    {
        $this->privateIdentification = $privateIdentification;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['account_name']           = $this->accountName;
        }
        if (isset($this->accountNumber)) {
            $json['account_number']         = $this->accountNumber;
        }
        if (isset($this->accountNumberCode)) {
            $json['account_number_code']    = AccountNumberCodeEnum::checkValue($this->accountNumberCode);
        }
        if (isset($this->accountType)) {
            $json['account_type']           = $this->accountType;
        }
        if (isset($this->accountWith)) {
            $json['account_with']           = $this->accountWith;
        }
        if (isset($this->address)) {
            $json['address']                = $this->address;
        }
        if (isset($this->country)) {
            $json['country']                = $this->country;
        }
        if (isset($this->privateIdentification)) {
            $json['private_identification'] = $this->privateIdentification;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
