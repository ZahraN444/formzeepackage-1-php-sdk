<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class NameVerificationAttributes implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountClassification;

    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var string
     */
    private $accountNumberCode;

    /**
     * @var string
     */
    private $bankId;

    /**
     * @var string
     */
    private $bankIdCode;

    /**
     * @var string[]
     */
    private $name;

    /**
     * @var string|null
     */
    private $secondaryIdentification;

    /**
     * @param string $accountClassification
     * @param string $accountNumber
     * @param string $accountNumberCode
     * @param string $bankId
     * @param string[] $name
     */
    public function __construct(
        string $accountClassification,
        string $accountNumber,
        string $accountNumberCode,
        string $bankId,
        array $name
    ) {
        $this->accountClassification = $accountClassification;
        $this->accountNumber = $accountNumber;
        $this->accountNumberCode = $accountNumberCode;
        $this->bankId = $bankId;
        $this->name = $name;
    }

    /**
     * Returns Account Classification.
     */
    public function getAccountClassification(): string
    {
        return $this->accountClassification;
    }

    /**
     * Sets Account Classification.
     *
     * @required
     * @maps account_classification
     * @factory \Form3PublicAPILib\Models\AccountClassificationEnum::checkValue
     */
    public function setAccountClassification(string $accountClassification): void
    {
        $this->accountClassification = $accountClassification;
    }

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @required
     * @maps account_number
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Number Code.
     * The type of identification given at `account_number` attribute
     */
    public function getAccountNumberCode(): string
    {
        return $this->accountNumberCode;
    }

    /**
     * Sets Account Number Code.
     * The type of identification given at `account_number` attribute
     *
     * @required
     * @maps account_number_code
     * @factory \Form3PublicAPILib\Models\AccountNumberCodeEnum::checkValue
     */
    public function setAccountNumberCode(string $accountNumberCode): void
    {
        $this->accountNumberCode = $accountNumberCode;
    }

    /**
     * Returns Bank Id.
     */
    public function getBankId(): string
    {
        return $this->bankId;
    }

    /**
     * Sets Bank Id.
     *
     * @required
     * @maps bank_id
     */
    public function setBankId(string $bankId): void
    {
        $this->bankId = $bankId;
    }

    /**
     * Returns Bank Id Code.
     */
    public function getBankIdCode(): string
    {
        return $this->bankIdCode;
    }

    /**
     * Sets Bank Id Code.
     *
     * @maps bank_id_code
     */
    public function setBankIdCode(string $bankIdCode): void
    {
        $this->bankIdCode = $bankIdCode;
    }

    /**
     * Returns Name.
     * Account holder names (for example title, first name, last name). Used for Confirmation of Payee
     * matching.
     *
     * @return string[]
     */
    public function getName(): array
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Account holder names (for example title, first name, last name). Used for Confirmation of Payee
     * matching.
     *
     * @required
     * @maps name
     *
     * @param string[] $name
     */
    public function setName(array $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Secondary Identification.
     */
    public function getSecondaryIdentification(): ?string
    {
        return $this->secondaryIdentification;
    }

    /**
     * Sets Secondary Identification.
     *
     * @maps secondary_identification
     */
    public function setSecondaryIdentification(?string $secondaryIdentification): void
    {
        $this->secondaryIdentification = $secondaryIdentification;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['account_classification']       = AccountClassificationEnum::checkValue($this->accountClassification);
        $json['account_number']               = $this->accountNumber;
        $json['account_number_code']          = AccountNumberCodeEnum::checkValue($this->accountNumberCode);
        $json['bank_id']                      = $this->bankId;
        $json['bank_id_code']                 = $this->bankIdCode;
        $json['name']                         = $this->name;
        if (isset($this->secondaryIdentification)) {
            $json['secondary_identification'] = $this->secondaryIdentification;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
