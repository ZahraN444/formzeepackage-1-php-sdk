<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class QueryResponseAnswerEnum
{
    public const ACCEPTED = 'accepted';

    public const REJECTED = 'rejected';

    public const PENDING = 'pending';

    public const ALREADY_APPLIED = 'already_applied';

    public const MODIFIED_AS_REQUESTED = 'modified_as_requested';

    public const TRANSACTION_NOT_RECEIVED = 'transaction_not_received';

    public const TRANSACTION_REJECTED = 'transaction_rejected';

    public const TRANSACTION_RETURNED = 'transaction_returned';

    public const TRANSACTION_NOT_PROCESSED = 'transaction_not_processed';

    public const REJECTED_REGULATORY_REASON = 'rejected_regulatory_reason';

    private const _ALL_VALUES = [
        self::ACCEPTED,
        self::REJECTED,
        self::PENDING,
        self::ALREADY_APPLIED,
        self::MODIFIED_AS_REQUESTED,
        self::TRANSACTION_NOT_RECEIVED,
        self::TRANSACTION_REJECTED,
        self::TRANSACTION_RETURNED,
        self::TRANSACTION_NOT_PROCESSED,
        self::REJECTED_REGULATORY_REASON
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for QueryResponseAnswerEnum.");
    }
}
