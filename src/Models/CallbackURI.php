<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class CallbackURI implements \JsonSerializable
{
    /**
     * @var string
     */
    private $callbackTransport;

    /**
     * @var string
     */
    private $callbackUri;

    /**
     * @param string $callbackTransport
     * @param string $callbackUri
     */
    public function __construct(string $callbackTransport, string $callbackUri)
    {
        $this->callbackTransport = $callbackTransport;
        $this->callbackUri = $callbackUri;
    }

    /**
     * Returns Callback Transport.
     */
    public function getCallbackTransport(): string
    {
        return $this->callbackTransport;
    }

    /**
     * Sets Callback Transport.
     *
     * @required
     * @maps callback_transport
     * @factory \Form3PublicAPILib\Models\CallbackTransportEnum::checkValue
     */
    public function setCallbackTransport(string $callbackTransport): void
    {
        $this->callbackTransport = $callbackTransport;
    }

    /**
     * Returns Callback Uri.
     * URI that will be called with the notification
     */
    public function getCallbackUri(): string
    {
        return $this->callbackUri;
    }

    /**
     * Sets Callback Uri.
     * URI that will be called with the notification
     *
     * @required
     * @maps callback_uri
     */
    public function setCallbackUri(string $callbackUri): void
    {
        $this->callbackUri = $callbackUri;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['callback_transport'] = CallbackTransportEnum::checkValue($this->callbackTransport);
        $json['callback_uri']       = $this->callbackUri;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
