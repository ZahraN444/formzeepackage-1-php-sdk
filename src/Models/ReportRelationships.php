<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class ReportRelationships implements \JsonSerializable
{
    /**
     * @var ReportAdmission2|null
     */
    private $reportAdmission;

    /**
     * @var ReportRequest1|null
     */
    private $reportRequest;

    /**
     * @var ThinRelationship|null
     */
    private $transactionFile;

    /**
     * Returns Report Admission.
     */
    public function getReportAdmission(): ?ReportAdmission2
    {
        return $this->reportAdmission;
    }

    /**
     * Sets Report Admission.
     *
     * @maps report_admission
     */
    public function setReportAdmission(?ReportAdmission2 $reportAdmission): void
    {
        $this->reportAdmission = $reportAdmission;
    }

    /**
     * Returns Report Request.
     */
    public function getReportRequest(): ?ReportRequest1
    {
        return $this->reportRequest;
    }

    /**
     * Sets Report Request.
     *
     * @maps report_request
     */
    public function setReportRequest(?ReportRequest1 $reportRequest): void
    {
        $this->reportRequest = $reportRequest;
    }

    /**
     * Returns Transaction File.
     */
    public function getTransactionFile(): ?ThinRelationship
    {
        return $this->transactionFile;
    }

    /**
     * Sets Transaction File.
     *
     * @maps transaction_file
     */
    public function setTransactionFile(?ThinRelationship $transactionFile): void
    {
        $this->transactionFile = $transactionFile;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->reportAdmission)) {
            $json['report_admission'] = $this->reportAdmission;
        }
        if (isset($this->reportRequest)) {
            $json['report_request']   = $this->reportRequest;
        }
        if (isset($this->transactionFile)) {
            $json['transaction_file'] = $this->transactionFile;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
