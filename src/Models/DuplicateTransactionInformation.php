<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class DuplicateTransactionInformation implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $endToEndReference;

    /**
     * @var QueryReference[]|null
     */
    private $references;

    /**
     * @var string|null
     */
    private $schemeTransactionId;

    /**
     * Returns End to End Reference.
     * Unique identification, as assigned by the initiating party, to unambiguously identify the
     * transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
     */
    public function getEndToEndReference(): ?string
    {
        return $this->endToEndReference;
    }

    /**
     * Sets End to End Reference.
     * Unique identification, as assigned by the initiating party, to unambiguously identify the
     * transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
     *
     * @maps end_to_end_reference
     */
    public function setEndToEndReference(?string $endToEndReference): void
    {
        $this->endToEndReference = $endToEndReference;
    }

    /**
     * Returns References.
     * Reference for the duplicated payment for this Exception and Investigation case.
     *
     * @return QueryReference[]|null
     */
    public function getReferences(): ?array
    {
        return $this->references;
    }

    /**
     * Sets References.
     * Reference for the duplicated payment for this Exception and Investigation case.
     *
     * @maps references
     *
     * @param QueryReference[]|null $references
     */
    public function setReferences(?array $references): void
    {
        $this->references = $references;
    }

    /**
     * Returns Scheme Transaction Id.
     * Unique identification, as assigned by the first instructing agent, to unambiguously identify the
     * transaction that is passed on, unchanged, throughout the entire interbank chain.
     */
    public function getSchemeTransactionId(): ?string
    {
        return $this->schemeTransactionId;
    }

    /**
     * Sets Scheme Transaction Id.
     * Unique identification, as assigned by the first instructing agent, to unambiguously identify the
     * transaction that is passed on, unchanged, throughout the entire interbank chain.
     *
     * @maps scheme_transaction_id
     */
    public function setSchemeTransactionId(?string $schemeTransactionId): void
    {
        $this->schemeTransactionId = $schemeTransactionId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->endToEndReference)) {
            $json['end_to_end_reference']  = $this->endToEndReference;
        }
        if (isset($this->references)) {
            $json['references']            = $this->references;
        }
        if (isset($this->schemeTransactionId)) {
            $json['scheme_transaction_id'] = $this->schemeTransactionId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
