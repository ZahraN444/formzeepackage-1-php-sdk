<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class Attributes33 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $schemeStatusCode;

    /**
     * @var string
     */
    private $schemeStatusCodeDescription;

    /**
     * @param string $schemeStatusCode
     * @param string $schemeStatusCodeDescription
     */
    public function __construct(string $schemeStatusCode, string $schemeStatusCodeDescription)
    {
        $this->schemeStatusCode = $schemeStatusCode;
        $this->schemeStatusCodeDescription = $schemeStatusCodeDescription;
    }

    /**
     * Returns Scheme Status Code.
     */
    public function getSchemeStatusCode(): string
    {
        return $this->schemeStatusCode;
    }

    /**
     * Sets Scheme Status Code.
     *
     * @required
     * @maps scheme_status_code
     */
    public function setSchemeStatusCode(string $schemeStatusCode): void
    {
        $this->schemeStatusCode = $schemeStatusCode;
    }

    /**
     * Returns Scheme Status Code Description.
     */
    public function getSchemeStatusCodeDescription(): string
    {
        return $this->schemeStatusCodeDescription;
    }

    /**
     * Sets Scheme Status Code Description.
     *
     * @required
     * @maps scheme_status_code_description
     */
    public function setSchemeStatusCodeDescription(string $schemeStatusCodeDescription): void
    {
        $this->schemeStatusCodeDescription = $schemeStatusCodeDescription;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['scheme_status_code']             = $this->schemeStatusCode;
        $json['scheme_status_code_description'] = $this->schemeStatusCodeDescription;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
