<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use Form3PublicAPILib\Utils\DateTimeHelper;
use stdClass;

class AccountEventAttributes implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountId;

    /**
     * @var \DateTime
     */
    private $dateTime;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $reason;

    /**
     * @var string
     */
    private $routingStatus;

    /**
     * @var string
     */
    private $status;

    /**
     * @param string $accountId
     * @param \DateTime $dateTime
     * @param string $routingStatus
     * @param string $status
     */
    public function __construct(string $accountId, \DateTime $dateTime, string $routingStatus, string $status)
    {
        $this->accountId = $accountId;
        $this->dateTime = $dateTime;
        $this->routingStatus = $routingStatus;
        $this->status = $status;
    }

    /**
     * Returns Account Id.
     * ID of the account this event relates to
     */
    public function getAccountId(): string
    {
        return $this->accountId;
    }

    /**
     * Sets Account Id.
     * ID of the account this event relates to
     *
     * @required
     * @maps account_id
     */
    public function setAccountId(string $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * Returns Date Time.
     */
    public function getDateTime(): \DateTime
    {
        return $this->dateTime;
    }

    /**
     * Sets Date Time.
     *
     * @required
     * @maps date_time
     * @factory \Form3PublicAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDateTime(\DateTime $dateTime): void
    {
        $this->dateTime = $dateTime;
    }

    /**
     * Returns Description.
     * Contains the event description
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Contains the event description
     *
     * @maps description
     * @factory \Form3PublicAPILib\Models\DescriptionEnum::checkValue
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Reason.
     * Failure reason. Should only be present when description is failed
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
     * Sets Reason.
     * Failure reason. Should only be present when description is failed
     *
     * @maps reason
     */
    public function setReason(?string $reason): void
    {
        $this->reason = $reason;
    }

    /**
     * Returns Routing Status.
     * Contains the routing status
     */
    public function getRoutingStatus(): string
    {
        return $this->routingStatus;
    }

    /**
     * Sets Routing Status.
     * Contains the routing status
     *
     * @required
     * @maps routing_status
     * @factory \Form3PublicAPILib\Models\RoutingStatusEnum::checkValue
     */
    public function setRoutingStatus(string $routingStatus): void
    {
        $this->routingStatus = $routingStatus;
    }

    /**
     * Returns Status.
     * Contains the event status
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Contains the event status
     *
     * @required
     * @maps status
     * @factory \Form3PublicAPILib\Models\Status2Enum::checkValue
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['account_id']      = $this->accountId;
        $json['date_time']       = DateTimeHelper::toRfc3339DateTime($this->dateTime);
        if (isset($this->description)) {
            $json['description'] = DescriptionEnum::checkValue($this->description);
        }
        if (isset($this->reason)) {
            $json['reason']      = $this->reason;
        }
        $json['routing_status']  = RoutingStatusEnum::checkValue($this->routingStatus);
        $json['status']          = Status2Enum::checkValue($this->status);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
