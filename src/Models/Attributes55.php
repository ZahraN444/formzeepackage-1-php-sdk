<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class Attributes55 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $limit;

    /**
     * @var string|null
     */
    private $position;

    /**
     * @var string|null
     */
    private $scheme;

    /**
     * Returns Limit.
     * Current limit
     */
    public function getLimit(): ?string
    {
        return $this->limit;
    }

    /**
     * Sets Limit.
     * Current limit
     *
     * @maps limit
     */
    public function setLimit(?string $limit): void
    {
        $this->limit = $limit;
    }

    /**
     * Returns Position.
     * Current position
     */
    public function getPosition(): ?string
    {
        return $this->position;
    }

    /**
     * Sets Position.
     * Current position
     *
     * @maps position
     */
    public function setPosition(?string $position): void
    {
        $this->position = $position;
    }

    /**
     * Returns Scheme.
     * Scheme associated with the limit
     */
    public function getScheme(): ?string
    {
        return $this->scheme;
    }

    /**
     * Sets Scheme.
     * Scheme associated with the limit
     *
     * @maps scheme
     */
    public function setScheme(?string $scheme): void
    {
        $this->scheme = $scheme;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->limit)) {
            $json['limit']    = $this->limit;
        }
        if (isset($this->position)) {
            $json['position'] = $this->position;
        }
        if (isset($this->scheme)) {
            $json['scheme']   = $this->scheme;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
