<?php

declare(strict_types=1);

/*
 * Form3PublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace Form3PublicAPILib\Models;

use stdClass;

class Relationships3 implements \JsonSerializable
{
    /**
     * @var RelationshipLinks|null
     */
    private $payment;

    /**
     * @var ReversalAdmission2|null
     */
    private $reversalAdmission;

    /**
     * @var RelationshipLinks|null
     */
    private $reversalSubmission;

    /**
     * Returns Payment.
     */
    public function getPayment(): ?RelationshipLinks
    {
        return $this->payment;
    }

    /**
     * Sets Payment.
     *
     * @maps payment
     */
    public function setPayment(?RelationshipLinks $payment): void
    {
        $this->payment = $payment;
    }

    /**
     * Returns Reversal Admission.
     */
    public function getReversalAdmission(): ?ReversalAdmission2
    {
        return $this->reversalAdmission;
    }

    /**
     * Sets Reversal Admission.
     *
     * @maps reversal_admission
     */
    public function setReversalAdmission(?ReversalAdmission2 $reversalAdmission): void
    {
        $this->reversalAdmission = $reversalAdmission;
    }

    /**
     * Returns Reversal Submission.
     */
    public function getReversalSubmission(): ?RelationshipLinks
    {
        return $this->reversalSubmission;
    }

    /**
     * Sets Reversal Submission.
     *
     * @maps reversal_submission
     */
    public function setReversalSubmission(?RelationshipLinks $reversalSubmission): void
    {
        $this->reversalSubmission = $reversalSubmission;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->payment)) {
            $json['payment']             = $this->payment;
        }
        if (isset($this->reversalAdmission)) {
            $json['reversal_admission']  = $this->reversalAdmission;
        }
        if (isset($this->reversalSubmission)) {
            $json['reversal_submission'] = $this->reversalSubmission;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
